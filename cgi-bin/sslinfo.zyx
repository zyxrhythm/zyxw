#!/bin/bash
#This script was created by Zyx Rhythm (email:zyxrhythm@gmail.com)
#You can download, copy and use it as you see fit.
#Though you are not required to, keeping this header and keeping the link below will be much appreciated.
################################################
#https://github.com/zyxrhythm
#############################################

. ../zyx/sh/genvars.sh

GANALYTICS=$(cat ../zyx/txt/ganalytics.txt);

#Checks the sever if NMAP or OPENSSL is available.

naoc0=$(test -e /usr/bin/nmap && echo 'y' || echo 'n' );
naoc1=$(test -e /usr/bin/openssl && echo 'y' || echo 'n' );

#give a value to the decider var for which software to use
if [[ $naoc0 = "y" ]] && [[ $naoc1 = "n" ]]; then
sslcs="nmap";
elif [[ $naoc0 = "n" ]]  && [[ $naoc1 = "y" ]]; then
sslcs="openssl";
elif [[ $naoc0 = "y" ]]  && [[ $naoc1 = "y" ]]; then
sslcs="nmap";
elif [[ $naoc0 = "n" ]]  && [[ $naoc1 = "n" ]]; then

echo "
<body>
<div id='divClipboard'>
<p><strong>Input:</strong> $domain <br> <br>
<span style="font-size: 120%; font-family: verdana; color: red; ">Error!!</span><br><br>
No NMAP / OPENSSL detected. Please install the programs on your server.<br></p>
</div>
<hr><br>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
";
exit 0;
#####
else true;
fi;

#start the html header
echo "Content-type: text/html"
echo ""

#stores the string from bbc.sh to a variable converts all uppercase to lowercase
qs=$(echo "$QUERY_STRING" | awk '{print tolower($0)}');

#get the domain from qs
#domain=$(echo "$qs" | cut -f2 -d"=" );
domain=$(grep -oP '(?<=domain=).*?(?=&)' <<< "$qs");

echo "<!DOCTYPE html>
<html>
<title>$SSLC</title>"

cat <<INIOHTMLHEAD
<head>
<link rel="icon" type="image/png" href="/icon.png" />
<meta name="description" content="$SITEBANNER is a website that can look up the whois information of a domain from whois servers, dig DNS records of domains and sub domains from name servers, etc...">
<meta name="keywords" content="DIG, DNS, WHOIS, SSL CHECK">
<meta name="author" content="Zyx Rhythm">
 
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" type="text/css" href="/css/sslinfo.css">
$GANALYTICS
<script src='https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js'></script>
<script src="/js/allowedchars.js"></script>
<script src="/js/gencopy.js"></script>
INIOHTMLHEAD

. ../zyx/sh/navpart.sh

cat << EONAVMENU
<div id='xtable' ><table> <tbody> <td>
<form action="/cgi-bin/sslinfo.zyx" method="get">
<input placeholder="Domain / sub domain"  type="text" onblur="this.value=removeSpaces(this.value); this.value=removeSpecialCharacters(this.value);" onKeyDown="if(event.keyCode==13) this.value=removeSpaces(this.value); if(event.keyCode==13) this.value=removeSpecialCharacters(this.value);" onKeyUp="if(event.keyCode==13) this.value=removeSpecialCharacters(this.value);"name="domain">
<input type="hidden" name="nscr" value="Y" >
<button type="submit" style='font-weight: bold;' > Check </button>
</form>
</td> </tbody> </table> </div></p>
<button onclick="copyClipboard()" >Copy Results</button> <label class="tooltip"> &#128072; &nbsp; &nbsp;<span class='tooltiptext' style='font-size: 95%; font-family: calibri; font: green; '> <br> Click the button to copy the results - then simply do a "paste" on your text editor or note taking app.<br><br></span></label> 
&nbsp;
<a style='color:tomato; cursor: pointer; font-size: 116%; font-family:verdana;' value="Refresh Page" onClick="window.location.href=window.location.href">&#8635;<span style="font-size: 77%;">Refresh Results</span></a>
<hr>
</head>
EONAVMENU

#checks if input is null 
if [[ -z "$domain" ]]; then
SSLCTPM=$(cat ../zyx/vars/tpage.vars | gawk '/<-SSL_TOOL_PAGE/{flag=1;next}/SSL_TOOL_PAGE->/{flag=0}flag');
cat <<EOTSE
<body>
<div id="divClipboard"><p>
$SSLCTPM
</p>
</div>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
EOTSE
exit 0;

else

IP0=$( dig +short a $domain );

if [[ -z "$IP0" ]] || [[ "$IP0" = " " ]]; 

then cat << ZXCVBNM
<body>
<div id='divClipboard'>
<p><strong>Input:</strong> $domain <br> <br>
<span style="font-size: 120%; font-family: verdana; color: red; ">Error!!</span><br><br>
Input does not resolve to an IP address (check the input syntax / check the DNS).<br></p>
</div>
<hr><br>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
ZXCVBNM

exit 0; 

else true; fi;

#===================
#FUNCTION HALL FOR OPENSSL
#===================

#uses openssl to determine the issuer of SSL the target domain and the expiration for gtlds
#errcfunc () {
#err=$(nmap "$1" -oX - -p 443 --script=ssl-cert | grep -i -e 'commonname' );
#echo "$err"; }

issuerfunc () {
issuer0=$(echo "$1" | grep -i 'issuer=' );
issuer=$( grep -oP '(?<=/O=).*?(?=/)' <<< "$issuer0");
echo "$issuer"; }

targetfunc () {
target0=$( echo "$1" | grep -i 'subject=' );
target=${target0#*CN=};
echo "$target"; }

expiryfunc () {
expiry0=$(echo "$1" | grep -i 'notafter=');
expiry=${expiry0#*After=};
echo "$expiry"; }

validstartfunc () {
validstart0=$(echo "$1" | grep -i 'notbefore=');
validstart=${validstart0#*Before=};
echo "$validstart"; }

daysleftfunc () {
Expiryx="$1"
dlyear0="${Expiryx:13:10}";
dlyear=$(grep -oP '(?<= ).*?(?= )' <<< "$dlyear0")
dlmonth=$( echo "${Expiryx:0:3}" | awk '{print tolower($0)}' );
case $dlmonth in jan) dlmono='1';; feb) dlmono='2';; mar) dlmono='3';; apr) dlmono='4';; may) dlmono='5';; jun) dlmono='6';; jul) dlmono='7';; aug) dlmono='8';; sep) dlmono='9';; oct) dlmono='10';; nov) dlmono='11';; dec) dlmono='12';; *) dlmono='0';;
esac;
dlday0="${Expiryx:0:9}";
dlday=$(grep -oP '(?<= ).*?(?= )' <<< "$dlday0");
fulldate="$dlyear-$dlmono-$dlday";
daysleft=$( echo $((($(date +%s --date "$fulldate")-$(date +%s))/(3600*24))) );
echo "$daysleft"; }

iponlyfunc () {
while IFS= read -r line
do
if [[ "$line" =~ ^(([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))\.){3}([1-9]?[0-9]|1[0-9][0-9]|2([0-4][0-9]|5[0-5]))$ ]]; 
then ipop="$line";
else 
linex=$(dig a +short "$line" ); 
ipop="$line (CNAME) <br> <br>The CNAME resolves to $linex"; 
fi;
echo "$ipop";
done < <(printf '%s\n' "$1");
}
#===================
#END OF FUNCTION HALL
#===================

#cuts and extracts the TLD
tld=$( echo "$domain" | rev | cut -d "." -f1 | rev );

. ../zyx/sh/tldblob.sh

#list of supported gtlds
shopt -s extglob
tldlist0="+($GTLDLIST)"

#list of supported ccTLDs
tldlist1="+($CCTLDLIST)"

#checks if the domain is a gtld
case $tld in
 $tldlist0)
   
#check if the input is domain or sub domain.
if [[ $( echo "$domain" | grep -o "\." | wc -l) -gt "1" ]]; then domvar="Sub Domain"; else domvar="Domain"; fi;

if [[ $sslcs = "nmap" ]]; then 

nmapsslinfo=$( nmap "$domain" -oX - -p 443 --script=ssl-cert );
nsix=$( echo "$nmapsslinfo" | grep -i -e 'commonname' );

if [[ -z "$nsix" ]];
then cat << ZXCVBNM
<body>
<div id='divClipboard'>
<p><strong>Input:</strong> $domain <br> 
<strong>Resolves to</strong> : $IP0 <br><br>
No certificate found on port 443. <br>
-https might be configured to use another port. <br>
-an S.S.L. certificate is not/not yet issued for the $domvar.<br></p>
</div>
<hr><br>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
ZXCVBNM
exit 0; 

else 

##############################################
ptag=$( echo "$nmapsslinfo" | grep "<ports>" );
atag=$( echo "$nmapsslinfo" | grep "address addr" );

IPA=$(grep -oP '(?<=addr=").*?(?=")' <<< "$atag" );

Issuer=$(grep -oP '(?<=Issuer: ).*?(?=Public Key type:)' <<< "$ptag" );
IssuerCN=$(grep -oP '(?<=commonName=).*?(?=/organizationName)' <<< "$Issuer" );
IssuerON=$(grep -oP '(?<=/organizationName=).*?(?=/)' <<< "$Issuer" );
IssuedForx0=$(grep -oP '(?<=Subject: commonName=).*?(?=&)' <<< "$ptag" );
IssuedForx1=$(grep -oP '(?<=Subject: commonName=).*?(?=/)' <<< "$ptag" );
if [[ $(echo $IssuedForx0 | wc -m) -gt $(echo $IssuedForx1 | wc -m) ]]; 
then 
IssuedFor="$IssuedForx1"; 
else 
IssuedFor="$IssuedForx0"; fi;

ValidStart0=$(grep -oP '(?<=Not valid before).*?(?=Not valid after:)' <<< "$ptag" );
ValidStart=$(grep -oP '(?<=: ).*?(?=&#xa;)' <<< "$ValidStart0" );
ValidEnd0=$(grep -oP '(?<=Not valid after).*?(?=MD5:)' <<< "$ptag" );
ValidEnd=$(grep -oP '(?<=:  ).*?(?=&#xa;)' <<< "$ValidEnd0" );

daysx=$( echo $((($(date +%s --date "${ValidEnd:0:10}")-$(date +%s))/(3600*24))) );

if [[ ${daysx:0:1} = "-" ]]; 
then 
daysvar="Days Expired:"; days="${daysx#*-}"; 
else 
daysvar="Days Left:"; days="$daysx"; fi;

fi;

elif [[ $sslcs = "openssl" ]]; then 

rawdata0=$(echo | openssl s_client -servername "$domain" -connect "$domain":443 2>/dev/null | openssl x509 -noout -issuer -subject -dates);

errc=$( echo "$rawdata0" | grep 'commonname' );

if [[ -z "$errc" ]];
then cat << ZXCVBNM
<body>
<div id='divClipboard'>
<p><strong>Input:</strong> $domain <br> 
<strong>Resolves to</strong> : $IP <br><br>
No certificate found on port 443. <br>
-https might be configured to use another port. <br>
-an S.S.L. certificate is not/not yet issued for the $domvar.<br></p>
</div>
<hr><br>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
ZXCVBNM
exit 0; 

else 

Issuer=$( issuerfunc "$rawdata0" );
Target=$( targetfunc "$rawdata0" );
Expiry=$( expiryfunc "$rawdata0" );
Validstart=$( validstartfunc "$rawdata0" );
Daysleft0=$( daysleftfunc "$Expiry" ); fi;

else true;
fi;
;;

 $tldlist1)
#check if the input is domain or sub domain.
if [[ $( echo "${domain#*.}" | grep -o "\." | wc -l) -gt "1" ]]; then domvar="Sub Domain"; else domvar="Domain"; fi;

if [[ $sslcs = "nmap" ]]; then

nmapsslinfo=$(nmap "$domain" -oX - -p 443 --script=ssl-cert );
nsix=$( echo "$nmapsslinfo" | grep -i -e 'commonname' );

if [[ -z "$nsix" ]];
then cat << ZXCVBNM2
<body>
<div id='divClipboard'>
<p><strong>Input:</strong> $domain <br> 
<strong>Resolves to</strong> : $IP0 <br><br>
No certificate found on port 443. <br>
-https might be configured to use another port. <br>
-S.S.L. certificate is not/not yet issued for the $domvar.<br></p>
</div>
<hr><br>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
ZXCVBNM2
exit 0; 

else 
##############################################
ptag=$( echo "$nmapsslinfo" | grep "<ports>" );
atag=$( echo "$nmapsslinfo" | grep "address addr" );

IPA=$(grep -oP '(?<=addr=").*?(?=")' <<< "$atag" );

Issuer=$(grep -oP '(?<=Issuer: ).*?(?=Public Key type:)' <<< "$ptag" );
IssuerCN=$(grep -oP '(?<=commonName=).*?(?=/organizationName)' <<< "$Issuer" );
IssuerON=$(grep -oP '(?<=/organizationName=).*?(?=/)' <<< "$Issuer" );
IssuedForx0=$(grep -oP '(?<=Subject: commonName=).*?(?=&)' <<< "$ptag" );
IssuedForx1=$(grep -oP '(?<=Subject: commonName=).*?(?=/)' <<< "$ptag" );
if [[ $(echo $IssuedForx0 | wc -m) -gt $(echo $IssuedForx1 | wc -m) ]]; 
then 
IssuedFor="$IssuedForx1"; 
else 
IssuedFor="$IssuedForx0"; fi;

ValidStart0=$(grep -oP '(?<=Not valid before).*?(?=Not valid after:)' <<< "$ptag" );
ValidStart=$(grep -oP '(?<=: ).*?(?=&#xa;)' <<< "$ValidStart0" );
ValidEnd0=$(grep -oP '(?<=Not valid after).*?(?=MD5:)' <<< "$ptag" );
ValidEnd=$(grep -oP '(?<=:  ).*?(?=&#xa;)' <<< "$ValidEnd0" );
daysx=$( echo $((($(date +%s --date "${ValidEnd:0:10}")-$(date +%s))/(3600*24))) );

if [[ ${daysx:0:1} = "-" ]]; 
then daysvar="Days Expired:"; days="${daysx#*-}"; 
else daysvar="Days Left:"; days="$daysx"; fi;
##############################################

fi;

elif [[ $sslcs = "openssl" ]]; then
errc=$( errcfunc "$domain" );

rawdata0=$(echo | openssl s_client -servername "$domain" -connect "$domain":443 2>/dev/null | openssl x509 -noout -issuer -subject -dates);

errc=$( echo "$rawdata0" | grep 'commonname' );

if [[ -z "$errc" ]];
then cat << ZXCVBNM2
<body>
<div id='divClipboard'>
<p><strong>Input:</strong> $domain <br> 
<strong>Resolves to</strong> : $IP <br><br>
No certificate found on port 443. <br>
-https might be configured to use another port. <br>
-S.S.L. certificate is not/not yet issued for the $domvar.<br></p>
</div>
<hr><br>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
ZXCVBNM2
exit 0; 

else 

Issuer=$( issuerfunc "$rawdata0" );
Target=$( targetfunc "$rawdata0" );
Expiry=$( expiryfunc "$rawdata0" );
Validstart=$( validstartfunc "$rawdata0" );
Daysleft0=$( daysleftfunc "$Expiry" ); 
fi;

else true;
fi;

;;

#throws in errors for non domain input
   *)
cat << EOIDNE
<body>
<div class="code-bg" id="divClipboard">
<p><strong>Input</strong> : $domain<br> <br>
Not a valid domain (<a href='https://en.wikipedia.org/wiki/Fully_qualified_domain_name' target='_blank'> FQDN<a/>) / <a href='https://en.wikipedia.org/wiki/Subdomain' target='_blank'>sub domain</a>!</p>
</div><br><hr><br>
<p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
EOIDNE
exit 0;
;;

esac

#1 if after case
if [[ $sslcs = "nmap" ]]; then

#standalone if else
if [[ -z $(echo "$IssuedFor" | grep -i "${domain#*.}" ) ]]; then certinf0="<span style='color: red';>The certificate found on the host/server( $IPA ) <br>is issued to another hostname/domain name not $domain.</span>"; else certinf0="<span style='color: green;'>The certificate target correlates with the input $domvar.</span>"; fi;

#standalone if else
if [[ "${IssuedFor:0:1}" = "*" ]]; then certtype="Wilcard Certificate."; elif [[ $( echo "${IssuedFor#*.}" | grep -o "\." | wc -l) -gt "0" ]]; then certtype="Not a wildcard - Cert issued to a sub domain."; else certtype="Not a wildcard - Cert issued to the naked domain."; fi;

issuerx=$( echo "$Issuer" | grep $domain );

#2 if (inside 1)
if [[ ! -z $issuerx ]]; then 

cat << EOTFRX
<body><p><span style='color:red;'>Self Signed SSL Certificate Found!</span></p>
<div class='code-bg' id='divClipboard'><p><strong>Input</strong> : $domain <br>
<strong>$domvar resolves to</strong> : $IPA <br><br>
<strong>Validity Start:</strong> : $ValidStart <br>
<strong>Expiration</strong> : $ValidEnd <br>
<strong>$daysvar</strong> : $days <br></p></div>
<p><span style='color:grey; font-size:70%;'>( '$daysvar' is calculated based on the server's time and time zone: $(date))</span></p>
<hr><p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
EOTFRX

#2 else (inside 1)
else

cat << EOTFR
<body><p>SSL Certificate Found!</p>
<div class='code-bg' id='divClipboard'><p><strong>Input</strong> : $domain <br>
<strong>$domvar resolves to</strong> : $IPA <br>
<strong>Certificate issued to</strong> : $IssuedFor<br><br>
<strong>Certificate Issuer</strong> : $IssuerON 
<script> 
function jscatab() { var x = document.getElementById('jscatab'); 
if (x.style.display === 'none') { x.style.display = 'block'; } 
else { x.style.display = 'none'; } } 
function changeTextcatab() {
var element = document.getElementById('catabid');
if (element.innerHTML === '-') {element.innerHTML = '+'; }
else { element.innerHTML = '-';} }
</script>
<a id='catabid' class='button tooltip' style='color:tomato; cursor: pointer; font-weight: bold; font-size: 120%; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;' onclick='jscatab(); changeTextcatab();'>+<span class='tooltiptext' style='color: white; word-break:break-word; font-size: 70%; font-family: calibri; text-align: center; font-weight:normal;' ><br> Click for more details. <br><br></span></a>
<div id='jscatab' style='display:none'> <table> <tbody> <td><p>
$IssuerCN &nbsp;&nbsp;( Common Name )<br>
$IssuerON &nbsp;&nbsp;( Organization Name )<br>
</p></td></tbody></table></div><p>
<strong>Validity Start:</strong> : $ValidStart <br>
<strong>Expiration</strong> : $ValidEnd <br>
<strong>$daysvar</strong> : $days <br><br>
<strong>Other Info :</strong> <br>$certtype</p></div> <p>$certinf0 </p><br>
<p><span style='color:grey; font-size:70%;'>( '$daysvar' is calculated based on the server's time and time zone: $(date))</span></p>
<hr><p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
EOTFR

#2 fi (inside 1)
fi;

#1 elif after case
elif [[ $sslcs = "openssl" ]]; then 

#standalone if else
if [[ -z $(echo "$Target" | grep -i "${domain#*.}" ) ]]; then certinf0="<span style='color: red;'>The certificate found on the host/server($IP) <br>is issued to another hostname/domain name not $domain.</span>"; else certinf0="<span style='color: green;'>The certificate target correlates with the input $domvar.</span>"; fi;

#standalone if else
if [[ ${Daysleft0:0:1} = "-" ]]; then leftvar="Cert Expired"; Daysleft="${Daysleft0#*-} days ago."; else leftvar="Daysleft"; Daysleft="$Daysleft0"; fi;

#standalone if else
if [[ "${Target:0:1}" = "*" ]]; then certtype="Wildcard Cert."; elif [[ $( echo "${Target#*.}" | grep -o "\." | wc -l) -gt "0" ]]; then certtype="Not a wilcard - Cert issued to a sub domain."; else certtype="Not a wildcard - Cert issued to the naked domain."; fi;

#standalone if else
if [[ "$domain" != "$Target" ]] && [[ "${Target:0:1}" != "*" ]]; then certloc="<br><strong>Cert Found at</strong> : "$Target" <br><strong>Which Resolves to</strong> : "$( dig a +short "$Target" | sort -u )" <br>"; else true; fi;

#####################

issuerxx=$( echo "$rawdata0" | grep -i -e 'issuer=' );
issuerx=$( echo "$issuerxx" | grep $domain );

#3 if after case (inside 1)
if [[ ! -z $issuerx ]]; then

echo "
<body><div class='code-bg' id='divClipboar d'><p>
<span style='color:red;' >Self Signed SSL Certificate Found!!</span> <br> <br>
<strong>Input ($domvar)</strong> : $domain <br>
<strong>Resolves to</strong> : $IP <br> 
$certloc <br>
<strong>Validity Start:</strong> : $Validstart <br>
<strong>Expiration</strong> : $Expiry <br>
<strong>$leftvar</strong> : $Daysleft <br></p></div>
<p><span style='color:grey; font-size:70%;'>( '$leftvar' is calculated based on the server's time and time zone: $(date))</span></p>
<hr><p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
";

#3 else after case (inside 1)
else

echo "
<body><div class='code-bg' id='divClipboard'><p><strong>Input ($domvar)</strong> : $domain <br><strong>Resolves to</strong> : $IP <br>
$certloc <br>
<strong>Cert Issuer</strong> : $Issuer <br>
<strong>Issued To</strong> : $Target<br>
<strong>Validity Start:</strong> : $Validstart <br>
<strong>Expiration</strong> : $Expiry <br>
<strong>$leftvar</strong> : $Daysleft <br><br>
<strong>Other Info</strong> : <br>$certtype </p></div><p>$certinf0</p>
<p><span style='color:grey; font-size:70%;'>( '$leftvar' is calculated based on the server's time and time zone: $(date))</span></p>
<hr><p style='color: red; text-decoration: none; font-family: calibri'><small><<</small><input type='button' style='background:none; border:none; font-size:95%; color: red;' value='back | track' onClick='history.go(-1);'>&nbsp;&nbsp;&nbsp;<input type='button' style='background:none; border:none; font-size:95%; color: red;' value='track | back' onClick='history.go(+1);'><small>>></small></p>
</body>
</html>
";

#3 fi after case (inside 1)
fi;

#1 else after case 
else true;

#1 fi after case
fi;

fi;

exit 0;
